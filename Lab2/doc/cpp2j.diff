Only in Conversion/mm_cpp2java_cleaned/src/mastermind/: __board__
Only in Conversion/mm_cpp2java_base/src/__code__: __board__
Only in Conversion/mm_cpp2java_cleaned/src/mastermind/__code__: Code.java
Only in Conversion/mm_cpp2java_base/src/__code__: __row__
diff -ur Conversion/mm_cpp2java_base/src/__colour__/Colours.java Conversion/mm_cpp2java_cleaned/src/mastermind/__colour__/Colours.java
--- Conversion/mm_cpp2java_base/src/__colour__/Colours.java	2015-06-30 21:22:39.471507000 -0400
+++ Conversion/mm_cpp2java_cleaned/src/mastermind/__colour__/Colours.java	2015-06-30 21:15:29.916526000 -0400
@@ -1,20 +1,18 @@
-package __colour__;
+package mastermind.__colour__;
 
-import __shedskin__.*;
-
-public class Colours extends pyobj {
-	public static __ss_int purple = new __ss_int();
-	public static __ss_int yellow = new __ss_int();
-	public static __ss_int green = new __ss_int();
-	public static __ss_int numberOfColours = new __ss_int();
-	public static __ss_int white = new __ss_int();
-	public static __ss_int red = new __ss_int();
-	public static __ss_int black = new __ss_int();
+public class Colours {
+	public static int purple = 0;
+	public static int yellow = 0;
+	public static int green = 0;
+	public static int numberOfColours = 0;
+	public static int white = 0;
+	public static int red = 0;
+	public static int black = 0;
 
 	public Colours() {
-		this.__class__ = GlobalMembersColour.cl_Colours;
+		
 	}
-	public static void __static__() {
+	private static void __static__() {
 		numberOfColours = 6;
 		red = 0;
 		green = 1;
@@ -22,7 +20,62 @@
 		yellow = 3;
 		white = 4;
 		black = 5;
+		
+	}
+	
+	public static void __init() {
+		const_0 = new String("red");
+		const_1 = new String("green");
+		const_2 = new String("purple");
+		const_3 = new String("yellow");
+		const_4 = new String("white");
+		const_5 = new String("black");
+
+		Colours.__static__();
 	}
+	
+	/**
+	 * Retourne le nom d'une couleur pour un index donnee
+	 * @param i
+	 * @return 
+	 */
+	public static String getColourName(int i) {
+
+		if ((i == 0)) {
+			return const_0;
+		}
+		else if ((i == 1)) {
+			return const_1;
+		}
+		else if ((i == 2)) {
+			return const_2;
+		}
+		else if ((i == 3)) {
+			return const_3;
+		}
+		else if ((i == 4)) {
+			return const_4;
+		}
+		else if ((i == 5)) {
+			return const_5;
+		}
+		return "0";
+	}
+
+
+
+	/**
+	 copyright Sean McCarthy, license GPL v2 or later 
+	*/
+
+
+	public static String const_0;
+	public static String const_1;
+	public static String const_2;
+	public static String const_3;
+	public static String const_4;
+	public static String const_5;
+
 }
 //C++ TO JAVA CONVERTER TODO TASK: Only the namespaces at the beginning of the file can be converted to the Java 'package' for this file:
 //ORIGINAL LINE: namespace __colour__
Only in Conversion/mm_cpp2java_base/src/__colour__: GlobalMembersColour.java
Only in Conversion/mm_cpp2java_cleaned/src/mastermind/: __game__
Only in Conversion/mm_cpp2java_cleaned/src/mastermind/: __mastermind__
Only in Conversion/mm_cpp2java_cleaned/src/mastermind/: package-info.java
Only in Conversion/mm_cpp2java_base/src/__peg__: __code__
Only in Conversion/mm_cpp2java_base/src/__peg__: GlobalMembersPeg.java
diff -ur Conversion/mm_cpp2java_base/src/__peg__/Peg.java Conversion/mm_cpp2java_cleaned/src/mastermind/__peg__/Peg.java
--- Conversion/mm_cpp2java_base/src/__peg__/Peg.java	2015-06-30 21:22:39.471507000 -0400
+++ Conversion/mm_cpp2java_cleaned/src/mastermind/__peg__/Peg.java	2015-06-30 21:15:29.916526000 -0400
@@ -1,34 +1,56 @@
-package __peg__;
-
-import __shedskin__.*;
+package mastermind.__peg__;
 
 //C++ TO JAVA CONVERTER NOTE: Java has no need of forward class declarations:
 //class Peg;
-public class Peg extends pyobj {
+public class Peg  {
 /**
 Class representing a (coloured) peg on the mastermind board
 */
-	public __ss_int __colour = new __ss_int();
+	public int __colour = 0;
 
 	public Peg() {
 	}
-	public Peg(__ss_int colour) {
-		this.__class__ = GlobalMembersPeg.cl_Peg;
+	
+	/**
+	 * Initialisation d'un pion
+	 * @param colour :couleur du pion
+	 * @return 
+	 */
+	public Peg(int colour) {
 		__init__(colour);
 	}
-	public final __ss_int getColour() {
-
+	
+	/**
+	    * Recupere la couleur d'un pion
+	    * @return 
+	    */
+	public final int getColour() {
 		return this.__colour;
 	}
-	public final __ss_bool equals(Peg peg) {
-
-		return ___bool((peg.getColour() == this.__colour));
+	
+	/**
+	    * Verifie qu'un pion en equivaut un autre (meme couleur)
+	    * @param peg
+	    * @return vrai ou faux
+	    */
+	@Override
+	public boolean equals(Object obj) {
+		if(obj == null)
+			return false;
+		
+		if(obj instanceof Peg){
+			Peg peg = (Peg) obj;
+			
+			return ((peg.getColour() == this.__colour));
+		}
+		
+		return false;
 	}
-	public final Object __init__(__ss_int colour) {
 
+	public final void __init__(int colour) {
 		this.__colour = colour;
-		return null;
 	}
+	
 }
 //C++ TO JAVA CONVERTER TODO TASK: Only the namespaces at the beginning of the file can be converted to the Java 'package' for this file:
 //ORIGINAL LINE: namespace __peg__
Only in Conversion/mm_cpp2java_base/src/__row__: __board__
Only in Conversion/mm_cpp2java_cleaned/src/mastermind/__row__: Row.java
